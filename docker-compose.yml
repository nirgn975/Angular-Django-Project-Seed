version: "3"

services:
  proxy:
    image: dockercloud/haproxy
    depends_on:
      - scraper-node
    environment:
      - BALANCE=leastconn
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80:80
    networks:
      - example_cluster
    deploy:
      placement:
        constraints: [node.role == manager]

  database:
    container_name: database
    restart: always
    image: postgres
    networks:
      - example_cluster

  client:
    image: client
    build: client/
    ports:
      - "4200:4200"
    working_dir: /usr/src
    volumes:
      - ./client:/usr/src
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    networks:
      - example_cluster

  server:
    image: server
    build: server/
    ports:
      - "8000:8000"
    working_dir: /usr/src
    volumes:
      - ./server:/usr/src
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    depends_on:
      - database
    networks:
      - example_cluster

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - example_cluster

networks:
  example_cluster:
    driver: overlay
